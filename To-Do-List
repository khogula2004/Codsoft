from tkinter import *
from tkinter import messagebox
import sqlite3 as sql

def add_task():
    """Adds a task to the task list and database."""
    task = task_field.get()
    if not task:
        messagebox.showinfo('Error', 'Field is Empty.')
    else:
        tasks.append(task)
        the_cursor.execute('INSERT INTO tasks (title) VALUES (?)', (task,))
        list_update()
        task_field.delete(0, 'end')

def list_update():
    """Updates the task listbox with current tasks."""
    task_listbox.delete(0, 'end')
    for task in tasks:
        task_listbox.insert('end', task)

def delete_task():
    """Deletes the selected task from the list and database."""
    try:
        task = task_listbox.get(task_listbox.curselection())
        tasks.remove(task)
        the_cursor.execute('DELETE FROM tasks WHERE title = ?', (task,))
        list_update()
    except IndexError:
        messagebox.showinfo('Error', 'No Task Selected. Cannot Delete.')

def delete_all_tasks():
    """Deletes all tasks after user confirmation."""
    if messagebox.askyesno('Delete All', 'Are you sure?'):
        tasks.clear()
        the_cursor.execute('DELETE FROM tasks')
        list_update()

def close():
    """Commits changes, closes the database connection, and exits the application."""
    the_connection.commit()
    the_cursor.close()
    guiWindow.destroy()

def retrieve_database():
    """Retrieves tasks from the database and updates the task list."""
    tasks.clear()
    for row in the_cursor.execute('SELECT title FROM tasks'):
        tasks.append(row[0])

if __name__ == "__main__":
    # Setup GUI window
    guiWindow = Tk()
    guiWindow.title("To-Do List")
    guiWindow.geometry("665x400+550+250")
    guiWindow.resizable(0, 0)
    guiWindow.configure(bg="#B5E5CF")

    # Setup database connection and table
    the_connection = sql.connect('listOfTasks.db')
    the_cursor = the_connection.cursor()
    the_cursor.execute('CREATE TABLE IF NOT EXISTS tasks (title TEXT)')

    # Initialize task list
    tasks = []

    # Setup frames and widgets
    functions_frame = Frame(guiWindow, bg="#8EE5EE")
    functions_frame.pack(side="top", expand=True, fill="both")

    task_label = Label(functions_frame, text="TO-DO-LIST \n Enter the Task Title:", font=("arial", 14, "bold"), bg="#8EE5EE", fg="#FF6103")
    task_label.place(x=20, y=30)

    task_field = Entry(functions_frame, font=("Arial", 14), width=42, bg="white", fg="black")
    task_field.place(x=180, y=30)

    Button(functions_frame, text="Add", width=15, bg='#D4AC0D', font=("arial", 14, "bold"), command=add_task).place(x=18, y=80)
    Button(functions_frame, text="Remove", width=15, bg='#D4AC0D', font=("arial", 14, "bold"), command=delete_task).place(x=240, y=80)
    Button(functions_frame, text="Delete All", width=15, bg='#D4AC0D', font=("arial", 14, "bold"), command=delete_all_tasks).place(x=460, y=80)
    Button(functions_frame, text="Exit / Close", width=52, bg='#D4AC0D', font=("arial", 14, "bold"), command=close).place(x=17, y=330)

    task_listbox = Listbox(functions_frame, width=70, height=9, font="bold", selectmode='SINGLE', bg="WHITE", fg="BLACK", selectbackground="#FF8C00", selectforeground="BLACK")
    task_listbox.place(x=17, y=140)

    # Retrieve tasks from database and update the listbox
    retrieve_database()
    list_update()

    # Run the main event loop
    guiWindow.mainloop()
