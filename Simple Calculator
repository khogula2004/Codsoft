import tkinter as tk

# Function to update the expression in the text entry box
def update_expression(entry, value):
    current_text = entry.get()
    entry.delete(0, tk.END)
    entry.insert(0, current_text + value)

# Function to clear the entry box
def clear_entry(entry):
    entry.delete(0, tk.END)

# Function to evaluate the expression and display the result
def evaluate_expression(entry):
    try:
        result = eval(entry.get())
        entry.delete(0, tk.END)
        entry.insert(0, str(result))
    except Exception as e:
        entry.delete(0, tk.END)
        entry.insert(0, "Error")

# Create the main window
root = tk.Tk()
root.title("Simple Calculator")

# Create an entry widget for displaying expressions
entry = tk.Entry(root, width=16, font=('Arial', 24), borderwidth=2, relief="solid")
entry.grid(row=0, column=0, columnspan=4)

# Define the button layout
buttons = [
    ('7', 1, 0), ('8', 1, 1), ('9', 1, 2), ('/', 1, 3),
    ('4', 2, 0), ('5', 2, 1), ('6', 2, 2), ('*', 2, 3),
    ('1', 3, 0), ('2', 3, 1), ('3', 3, 2), ('-', 3, 3),
    ('0', 4, 0), ('.', 4, 1), ('=', 4, 2), ('+', 4, 3)
]

# Create the buttons and place them in the grid
for (text, row, column) in buttons:
    if text == '=':
        button = tk.Button(root, text=text, padx=20, pady=20, font=('Arial', 18),
                           command=lambda e=entry: evaluate_expression(e))
    else:
        button = tk.Button(root, text=text, padx=20, pady=20, font=('Arial', 18),
                           command=lambda t=text, e=entry: update_expression(e, t))
    button.grid(row=row, column=column, sticky="nsew")

# Create a clear button
clear_button = tk.Button(root, text='C', padx=20, pady=20, font=('Arial', 18),
                         command=lambda e=entry: clear_entry(e))
clear_button.grid(row=4, column=3, sticky="nsew")

# Configure row and column weights to make the buttons expand when window is resized
for i in range(5):
    root.grid_rowconfigure(i, weight=1)
    if i < 4:
        root.grid_columnconfigure(i, weight=1)

# Run the main event loop
root.mainloop()
